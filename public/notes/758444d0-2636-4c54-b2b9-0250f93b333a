:PROPERTIES:
:ID:       758444d0-2636-4c54-b2b9-0250f93b333a
:END:
#+title: args::init

引数の初期化は sys::args の中で行なわれていて、 ~init~ で第一引数、第二引数がそれぞれ大元となる以下の二つの Atomic 型に取り出される。
~args~ が ~main~ から分離できるのはこのおかげだと思う。

- ~ARGC: AtomicIzie~ : 引数の個数のこと
- ~ARGV: AtomiPtr<*const u8>~ : 引数の文字列を格納した配列

よく使われる ~args()~ の自体はたぶん[[https://github.com/rust-lang/rust/blob/master/library/std/src/sys/unix/args.rs][以下]]:

#+begin_src rust
  pub fn args() -> Args {
      Args { iter: clone().into_iter() }
  }

  fn clone() -> Vec<OsString> {
      unsafe {
          // Load ARGC and ARGV, which hold the unmodified system-provided
          // argc/argv, so we can read the pointed-to memory without atomics
          // or synchronization.
          //
          // If either ARGC or ARGV is still zero or null, then either there
          // really are no arguments, or someone is asking for `args()`
          // before initialization has completed, and we return an empty
          // list.
          let argv = ARGV.load(Ordering::Relaxed);
          let argc = if argv.is_null() { 0 } else { ARGC.load(Ordering::Relaxed) };
          (0..argc)
              .map(|i| {
                  let cstr = CStr::from_ptr(*argv.offset(i) as *const libc::c_char);
                  OsStringExt::from_vec(cstr.to_bytes().to_vec())
              })
              .collect()
      }
  }
#+end_src

